name: 'Publish artifact or docker image'

on:
  workflow_dispatch:          # manual trigger with inputs
    inputs:
      working-directory:
        description: 'Project working directory'
        required: true
        type: string
      dotnet-version:
        description: '.NET SDK version'
        required: true
        type: string
      environment:
        description: 'Environment'
        required: true
        type: string
      publish-type:
        description: 'Publish type (artifact or docker image)'
        required: true
        type: choice
        options:
          - artifact
          - docker-image

  workflow_call:              # reusable workflow call trigger
    inputs:
      working-directory:
        description: 'Project working directory'
        required: true
        type: string
      environment:
        description: 'Environment'
        required: true
        type: string
      dotnet-version:
        description: '.NET SDK version'
        required: true
        type: string
      publish-type:
        description: 'Publish type (artifact or docker image)'
        required: true
        type: string
        
jobs:
  publish-artifact:
    name: Build & Publish Artifact
    runs-on: ubuntu-latest
    if: ${{ inputs.publish-type == 'artifact' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up dotnet env
        uses: ./.github/actions/setup-dotnet
        with:
          dotnet-version: ${{ inputs.dotnet-version }}
          working-directory: ${{ inputs.working-directory }}

      - name: Publish application
        run: dotnet publish --no-restore -c Release -o ./publish
        working-directory: "./${{ inputs.working-directory }}"

      - name: Upload published artifact
        uses: actions/upload-artifact@v4
        with:
          name: helloworld-app
          path: "./${{ inputs.working-directory }}/publish"
  public-image:
     name: Public Docker Image
     runs-on: ubuntu-latest
     if: ${{ inputs.publish-type == 'image' }}
     steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Generate datetime-based tag
        run: echo "IMAGE_TAG=${{ inputs.environment }}-$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV
      
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/helloworld-api:${{ env.IMAGE_TAG }} ./docker
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/helloworld-api:${{ env.IMAGE_TAG }} ${{ secrets.DOCKERHUB_USERNAME }}/helloworld-api:latest
      
      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/helloworld-api:${{ env.IMAGE_TAG }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/helloworld-api:latest
